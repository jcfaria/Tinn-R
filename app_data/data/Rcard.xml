<?xml version="1.0" standalone="yes"?>  <DATAPACKET Version="2.0"><METADATA><FIELDS><FIELD attrname="Group" fieldtype="string" WIDTH="50"/><FIELD attrname="Function" fieldtype="string" WIDTH="50"/><FIELD attrname="Description" fieldtype="bin.hex" SUBTYPE="Text"/></FIELDS><PARAMS/></METADATA><ROWDATA><ROW Group="Basic and help" Function="?topic" Description="Documentation on topic"/><ROW Group="Basic and help" Function="apropos(&apos;topic&apos;)" Description="The names of all objects in the search list matching the regular expression &apos;topic&apos; the regular expression &apos;topic&apos;"/><ROW Group="Basic and help" Function="attach(x)" Description="Database x to the R search path; x can be a list, data frame, or R data file created with save. Use search() to show the search path"/><ROW Group="Basic and help" Function="detach(x)" Description="x from the R search path; x can be a name or character string of an object previously attached or a package"/><ROW Group="Basic and help" Function="dir()" Description="Show files in the current directory"/><ROW Group="Basic and help" Function="example(command)" Description="Examples of command"/><ROW Group="Basic and help" Function="help(package=mva)" Description="Help with (e.g.) package mva"/><ROW Group="Basic and help" Function="help(topic)" Description="Documentation on topic"/><ROW Group="Basic and help" Function="help.search(&apos;topic&apos;)" Description="Search the help system"/><ROW Group="Basic and help" Function="help.start()" Description="Start the HTML version of help"/><ROW Group="Basic and help" Function="library(x)" Description="Load add-on packages; library(help=x) lists datasets and functions in package x"/><ROW Group="Basic and help" Function="ls()" Description="Show objects in the search path; specify pat=&apos;pat&apos; to search on a pattern"/><ROW Group="Basic and help" Function="ls.str()" Description="str() for each variable in the search path"/><ROW Group="Basic and help" Function="methods(a)" Description="Shows S3 methods of a"/><ROW Group="Basic and help" Function="methods(class=class(a))" Description="Lists all the methods to handle objects of class a"/><ROW Group="Basic and help" Function="options(...)" Description="Set or examine many global options; common ones: width, digits, error"/><ROW Group="Basic and help" Function="str(a)" Description="Display the internal structure of an R object"/><ROW Group="Basic and help" Function="summary(a)" Description="Gives a &apos;summary&apos; of a, usually a statistical summary but it is generic meaning it has different operations for different classes of a"/><ROW Group="Data (creation)" Function="array(x, dim=)" Description="Array with data x; specify dimensions like dim=c(3,4,2); elements of x recycle if x is not long enough"/><ROW Group="Data (creation)" Function="c(...)" Description="Generic function to combine arguments with the default forming a vector; with recursive=TRUE descends through lists combining all elements into one vector"/><ROW Group="Data (creation)" Function="cbind(...)" Description="Idem rbind(...) by columns"/><ROW Group="Data (creation)" Function="data.frame(...)" Description="Create a data frame of the named or unnamed arguments; data.frame(v=1:4, ch=c(&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;), n=10); shorter vectors are recycled to the length of the longest"/><ROW Group="Data (creation)" Function="expand.grid()" Description="A data frame from all combinations of the supplied vectors or factors"/><ROW Group="Data (creation)" Function="factor(x, levels=)" Description="Encodes a vector x as a factor"/><ROW Group="Data (creation)" Function="from:to" Description="Generates a sequence; &apos;:&apos; has operator priority; 1:4 + 1 is &apos;2, 3, 4, 5&apos;"/><ROW Group="Data (creation)" Function="gl(n, k, length=n*k, labels=1:n)" Description="Generate levels (factors) by specifying the pattern of their levels; k is the number of levels, and n is the number of replications"/><ROW Group="Data (creation)" Function="list(...)" Description="Create a list of the named or unnamed arguments; list(a=c(1, 2), b=&apos;hi&apos;, c=3i);"/><ROW Group="Data (creation)" Function="matrix(x, nrow=, ncol=)" Description="Matrix; elements of x recycle"/><ROW Group="Data (creation)" Function="rbind(...)" Description="Combine arguments by rows for matrices, data frames, and others"/><ROW Group="Data (creation)" Function="rep(x, times)" Description="Replicate x times; use &apos;each=&apos; to repeat &apos;each&apos; element of x each times; rep(c(1, 2, 3), 2) is 1 2 3 1 2 3; rep(c(1, 2, 3), each=2) is 1 1 2 2 3 3"/><ROW Group="Data (creation)" Function="seq(along=x)" Description="Generates 1, 2, ..., length(x); useful for for loops"/><ROW Group="Data (creation)" Function="seq(from, to)" Description="Generates a sequence &apos;by=&apos; specifies increment; &apos;length=&apos; specifies desired length"/><ROW Group="Data (load, read, write and save)" Function="data(x)" Description="Loads specified data sets"/><ROW Group="Data (load, read, write and save)" Function="load()" Description="Load the datasets written with save"/><ROW Group="Data (load, read, write and save)" Function="read.csv(&apos;file&apos;, header=TRUE)" Description="Idem read.table(file), but with defaults set for reading comma-delimited files"/><ROW Group="Data (load, read, write and save)" Function="read.delim(&apos;file&apos;, header=TRUE)" Description="Idem read.table(file), but with defaults set for reading tab-delimited files"/><ROW Group="Data (load, read, write and save)" Function="read.fwf(&apos;file&apos;, widths, header=FALSE, ...)" Description="Read a table of fixed width formatted data into a &apos;data.frame&apos;; widths is an integer vector, giving the widths of the fixed-width fields"/><ROW Group="Data (load, read, write and save)" Function="read.table(&apos;file&apos;)" Description="Reads a file in table format and creates a data frame from it; the default separator sep=&apos; &apos; is any whitespace; use header=TRUE to read the first line as a header of column names; use as.is=TRUE to prevent character vectors from being converted to factors; use comment.char=&apos; &apos; to prevent &apos;#&apos; from being interpreted as a comment; use skip=n to skip n lines before reading data; see the help for options on row naming, NA treatment, and others"/><ROW Group="Data (load, read, write and save)" Function="read.table(file(&apos;clipboard&apos;), header=T)" Description="Read a spreadsheet content from clipboard"/><ROW Group="Data (load, read, write and save)" Function="save(&apos;file&apos;, ...)" Description="Saves the specified objects (...) in the XDR platformindependent binary format"/><ROW Group="Data (load, read, write and save)" Function="save.image(&apos;file&apos;)" Description="Saves all objects"/><ROW Group="Data (load, read, write and save)" Function="write(object, &apos;file&apos;)" Description="Writes object to fileName"/><ROW Group="Data (load, read, write and save)" Function="write.table(dataFrame, &apos;file&apos;)" Description="Writes a table"/><ROW Group="Data (load, read, write and save)" Function="write.table(x, file=&apos; &apos;, row.names=TRUE, ...)" Description="Prints x after converting to a data frame; if quote is TRUE, character or factor columns are surrounded by quotes (&apos; &apos;); sep is the field separator; eol is the end-of-line separator; na is the string for missing values; use col.names=NA to add a blank column header to get the column headers aligned correctly for spreadsheet input"/><ROW Group="Data (selection and manipulation)" Function="choose(n, k)" Description="Computes the combinations of k events among n repetitions=n!/[(n-k)!k!]"/><ROW Group="Data (selection and manipulation)" Function="cut(x, breaks)" Description="Divides x into intervals (factors); breaks is the number of cut intervals or a vector of cut points"/><ROW Group="Data (selection and manipulation)" Function="match(x, y)" Description="Returns a vector of the same length than x with the elements of x which are in y (NA otherwise)"/><ROW Group="Data (selection and manipulation)" Function="na.fail(x)" Description="Returns an error message if x contains at least one NA"/><ROW Group="Data (selection and manipulation)" Function="na.omit(x)" Description="Suppresses the observations with missing data (NA) (suppresses the corresponding line if x is a matrix or a data frame)"/><ROW Group="Data (selection and manipulation)" Function="prop.table(x, margin=)" Description="Table entries as fraction of marginal table"/><ROW Group="Data (selection and manipulation)" Function="rev(x)" Description="Reverses the elements of x"/><ROW Group="Data (selection and manipulation)" Function="sample(x, size)" Description="Resample randomly and without replacement size elements in the vector x, the option replace=TRUE allows to resample with replacement"/><ROW Group="Data (selection and manipulation)" Function="sort(x)" Description="Sorts the elements of x in increasing order; to sort in decreasing order: rev(sort(x))"/><ROW Group="Data (selection and manipulation)" Function="subset(x, ...)" Description="Returns a selection of x with respect to criteria (..., typically comparisons); if x is a data frame, the option select gives the variables to be kept or dropped using a minus sign"/><ROW Group="Data (selection and manipulation)" Function="table(x)" Description="Returns a table with the numbers of the differents values of x (typically for integers or factors)"/><ROW Group="Data (selection and manipulation)" Function="unique(x)" Description="If x is a vector or a data frame, returns a similar object but with the duplicate elements suppressed"/><ROW Group="Data (selection and manipulation)" Function="which(x==a)" Description="Returns a vector of the indices of x if the comparison operation is true (TRUE), in this example the values of i for which x[i]==a (the argument of this function must be a variable of mode logical)"/><ROW Group="Data (selection and manipulation)" Function="which.max(x)" Description="Returns the index of the greatest element of x"/><ROW Group="Data (selection and manipulation)" Function="which.min(x)" Description="Returns the index of the smallest element of x"/><ROW Group="Dates and times" Function="as.Date(s)" Description="Convert to the respective class; format(dt) converts to a string representation. The default string format is &apos;2001-02-21&apos;. These accept a second argument to specify a format for conversion. Some common formats are: %a, %A Abbreviated and full weekday name; %b, %B Abbreviated and full month name; %d Day of the month (01-31); %H Hours (00-23); %I Hours (01-12); %j Day of year (001-366); %m Month (01-12); %M Minute (00-59); %p AM/PM indicator; %S Second as decimal number (00-61); %U Week (00-53); the first Sunday as day 1 of week 1; %w Weekday (0-6, Sunday is 0); %W Week (00-53); the first Monday as day 1 of week 1; %y Year without century (00-99). Don&apos;t use; %Y Year with century; %z (output only.) Offset from Greenwich; -0800 is 8 hours west of; %Z (output only.) Time zone as a character string (empty if not available)"/><ROW Group="Dates and times" Function="as.POSIXct(s)" Description="Convert to the respective class; format(dt) converts to a string representation. The default string format is &apos;2001-02-21&apos;. These accept a second argument to specify a format for conversion. Some common formats are: %a, %A Abbreviated and full weekday name; %b, %B Abbreviated and full month name; %d Day of the month (01-31); %H Hours (00-23); %I Hours (01-12); %j Day of year (001-366); %m Month (01-12); %M Minute (00-59); %p AM/PM indicator; %S Second as decimal number (00-61); %U Week (00-53); the first Sunday as day 1 of week 1; %w Weekday (0-6, Sunday is 0); %W Week (00-53); the first Monday as day 1 of week 1; %y Year without century (00-99). Don&apos;t use; %Y Year with century; %z (output only.) Offset from Greenwich; -0800 is 8 hours west of; %Z (output only.) Time zone as a character string (empty if not available)"/><ROW Group="Distributions" Function="rbeta(n, shape1, shape2)" Description="Beta"/><ROW Group="Distributions" Function="rbinom(n, size, prob)" Description="Binomial"/><ROW Group="Distributions" Function="rcauchy(n, location=0, scale=1)" Description="Cauchy"/><ROW Group="Distributions" Function="rchisq(n, df)" Description="Pearson"/><ROW Group="Distributions" Function="rexp(n, rate=1)" Description="Exponential"/><ROW Group="Distributions" Function="rf(n, df1, df2)" Description="Fisher-Snedecor"/><ROW Group="Distributions" Function="rgamma(n, shape, scale=1)" Description="Gamma"/><ROW Group="Distributions" Function="rgeom(n, prob)" Description="Geometric"/><ROW Group="Distributions" Function="rhyper(nn, m, n, k)" Description="Hypergeometric"/><ROW Group="Distributions" Function="rlnorm(n, meanlog=0, sdlog=1)" Description="Lognormal"/><ROW Group="Distributions" Function="rlogis(n, location=0, scale=1)" Description="Logistic"/><ROW Group="Distributions" Function="rnbinom(n, size, prob)" Description="Negative binomial"/><ROW Group="Distributions" Function="rnorm(n, mean=0, sd=1)" Description="Gaussian (normal)"/><ROW Group="Distributions" Function="rpois(n, lambda)" Description="Poisson"/><ROW Group="Distributions" Function="rsignrank(nn, n)" Description="Wilcoxon&apos;s statistics"/><ROW Group="Distributions" Function="rt(n, df)" Description="Student (t)"/><ROW Group="Distributions" Function="runif(n, min=0, max=1)" Description="Uniform"/><ROW Group="Distributions" Function="rweibull(n, shape, scale=1)" Description="Weibull"/><ROW Group="Distributions" Function="rwilcox(nn, m, n)" Description="Wilcoxon&apos;s statistics"/><ROW Group="Graphical (low-level commands)" Function="abline(a, b)" Description="Draws a line of slope b and intercept a"/><ROW Group="Graphical (low-level commands)" Function="abline(h=y)" Description="Draws a horizontal line at ordinate y"/><ROW Group="Graphical (low-level commands)" Function="abline(lm.obj)" Description="Draws the regression line given by lm.obj"/><ROW Group="Graphical (low-level commands)" Function="abline(v=x)" Description="Draws a vertical line at abcissa x"/><ROW Group="Graphical (low-level commands)" Function="arrows(x0, y0, x1, y1, angle=30, code=2)" Description="Idem segments(x0, y0, x1, y1), but with arrows at points (x0, y0) if code=2, at points (x1, y1) if code=1, or both if code=3; angle controls the angle from the shaft of the arrow to the edge of the arrow head"/><ROW Group="Graphical (low-level commands)" Function="axis(side)" Description="Adds an axis at the bottom (side=1), on the left (2), at the top (3), or on the right (4); at=vect (optional) gives the abcissa (or ordinates) where tick-marks are drawn"/><ROW Group="Graphical (low-level commands)" Function="box()" Description="Draw a box around the current plot"/><ROW Group="Graphical (low-level commands)" Function="legend(x, y, legend)" Description="Adds the legend at the point (x,y) with the symbols given by legend"/><ROW Group="Graphical (low-level commands)" Function="lines(x, y)" Description="Adds lines (the option &apos;type=&apos; can be used)"/><ROW Group="Graphical (low-level commands)" Function="locator(n, type=&apos;n&apos;, ...)" Description="Returns the coordinates (x, y) after the user has clicked n times on the plot with the mouse; also draws symbols (type=&apos;p&apos;) or lines (type=&apos;l&apos;) with respect to optional graphic parameters (...); by default nothing is drawn (type=&apos;n&apos;)"/><ROW Group="Graphical (low-level commands)" Function="mtext(text, side=3, line=0, ...)" Description="Adds text given by text in the margin specified by side (see axis()); line specifies the line from the plotting area"/><ROW Group="Graphical (low-level commands)" Function="points(x, y)" Description="Adds points (the option &apos;type=&apos; can be used)"/><ROW Group="Graphical (low-level commands)" Function="polygon(x, y)" Description="Draws a polygon linking the points with coordinates given by x and y"/><ROW Group="Graphical (low-level commands)" Function="rect(x1, y1, x2, y2)" Description="Draws a rectangle which left, right, bottom, and top limits are x1, x2, y1, and y2, respectively"/><ROW Group="Graphical (low-level commands)" Function="rug(x)" Description="Draws the data x on the x-axis as small vertical lines"/><ROW Group="Graphical (low-level commands)" Function="segments(x0, y0, x1, y1)" Description="Draws lines from points (x0, y0) to points (x1, y1)"/><ROW Group="Graphical (low-level commands)" Function="text(x, y, labels, ...)" Description="Adds text given by labels at coordinates (x, y); a typical use is: plot(x, y, type=&apos;n&apos;); text(x, y, names)"/><ROW Group="Graphical (low-level commands)" Function="title()" Description="Adds a title and optionally a sub-title"/><ROW Group="Graphical (parameters)" Function="adj" Description="Controls text justification (0 left-justified, 0.5 centred, 1 right-justified)"/><ROW Group="Graphical (parameters)" Function="bg" Description="Specifies the colour of the background (ex. : bg=&apos;red&apos;, bg=&apos;blue&apos;, . . . the list of the 657 available colours is displayed with colors())"/><ROW Group="Graphical (parameters)" Function="bty" Description="Controls the type of box drawn around the plot, allowed values are: &apos;o&apos;, &apos;l&apos;, &apos;7&apos;, &apos;c&apos;, &apos;u&apos; ou &apos;]&apos; (the box looks like the corresponding character); if bty=&apos;n&apos; the box is not drawn"/><ROW Group="Graphical (parameters)" Function="cex" Description="A value controlling the size of texts and symbols with respect to the default; the following parameters have the same control for numbers on the axes, cex.axis, the axis labels, cex.lab, the title, cex.main, and the sub-title, cex.sub"/><ROW Group="Graphical (parameters)" Function="col" Description="Controls the color of symbols and lines; use color names: &apos;red&apos;, &apos;blue&apos; see colors() or as &apos;#RRGGBB&apos;; see rgb(), hsv(), gray(), and rainbow(); as for cex there are: col.axis, col.lab, col.main, col.sub"/><ROW Group="Graphical (parameters)" Function="font" Description="An integer which controls the style of text (1: normal, 2: italics, 3: bold, 4: bold italics); as for cex there are: font.axis, font.lab, font.main, font.sub"/><ROW Group="Graphical (parameters)" Function="las" Description="An integer which controls the orientation of the axis labels (0: parallel to the axes, 1: horizontal, 2: perpendicular to the axes, 3: vertical)"/><ROW Group="Graphical (parameters)" Function="lty" Description="Controls the type of lines, can be an integer or string (1: &apos;solid&apos;, 2: &apos;dashed&apos;, 3: &apos;dotted&apos;, 4: &apos;dotdash&apos;, 5: &apos;longdash&apos;, 6: &apos;twodash&apos;, or a string of up to eight characters (between &apos;0&apos; and &apos;9&apos;) which specifies alternatively the length, in points or pixels, of the drawn elements and the blanks, for example lty=&apos;44&apos; will have the same effect than lty=2"/><ROW Group="Graphical (parameters)" Function="lwd" Description="A numeric which controls the width of lines, default 1"/><ROW Group="Graphical (parameters)" Function="mar" Description="A vector of 4 numeric values which control the space between the axes and the border of the graph of the form c(bottom, left, top, right), the default values are c(5.1, 4.1, 4.1, 2.1)"/><ROW Group="Graphical (parameters)" Function="mfcol" Description="A vector of the form c(nr, nc) which partitions the graphic window as a matrix of nr lines and nc columns, the plots are then drawn in columns"/><ROW Group="Graphical (parameters)" Function="mfrow" Description="Idem mfcol, but the plots are drawn by row"/><ROW Group="Graphical (parameters)" Function="pch" Description="Controls the type of symbol, either an integer between 1 and 25, or any single character within &apos; &apos;"/><ROW Group="Graphical (parameters)" Function="ps" Description="An integer which controls the size in points of texts and symbols"/><ROW Group="Graphical (parameters)" Function="pty" Description="A character which specifies the type of the plotting region, &apos;s&apos;: square, &apos;m&apos;: maximal"/><ROW Group="Graphical (parameters)" Function="tck" Description="A value which specifies the length of tick-marks on the axes as a fraction of the smallest of the width or height of the plot; if tck=1 a grid is drawn"/><ROW Group="Graphical (parameters)" Function="tcl" Description="A value which specifies the length of tick-marks on the axes as a fraction of the height of a line of text (by default tcl=-0.5)"/><ROW Group="Graphical (parameters)" Function="xaxs" Description="Style of axis interval calculation; default &apos;r&apos; for an extra space; &apos;i&apos; for no extra space"/><ROW Group="Graphical (parameters)" Function="xaxt" Description="If xaxt=&apos;n&apos; the x-axis is set but not drawn (useful in conjunction with axis(side=1, ...))"/><ROW Group="Graphical (parameters)" Function="yaxs" Description="Style of axis interval calculation; default &apos;r&apos; for an extra space; &apos;i&apos; for no extra space"/><ROW Group="Graphical (parameters)" Function="yaxt" Description="If yaxt=&apos;n&apos; the y-axis is set but not drawn (useful in conjonction with axis(side=2, ...))"/><ROW Group="Graphical (plotting)" Function="add=FALSE" Description="Parameters are common to many plotting functions, if TRUE superposes the plot on the previous one (if it exists)"/><ROW Group="Graphical (plotting)" Function="assocplot(x)" Description="Cohen-Friendly graph showing the deviations from independence of rows and columns in a two dimensional contingency table"/><ROW Group="Graphical (plotting)" Function="axes=TRUE" Description="Parameters are common to many plotting functions, if FALSE does not draw the axes and the box"/><ROW Group="Graphical (plotting)" Function="barplot(x)" Description="Histogram of the values of x; use horiz=FALSE for horizontal bars"/><ROW Group="Graphical (plotting)" Function="boxplot(x)" Description="Box-and-whiskers plot"/><ROW Group="Graphical (plotting)" Function="contour(x, y, z)" Description="Contour plot (data are interpolated to draw the curves), x and y must be vectors and z must be a matrix so that dim(z)=c(length(x), length(y)) (x and y may be omitted)"/><ROW Group="Graphical (plotting)" Function="coplot(x~y | z)" Description="Bivariate plot of x and y for each value or interval of values of z"/><ROW Group="Graphical (plotting)" Function="dotchart(x)" Description="If x is a data frame, plots a Cleveland dot plot (stacked plots line-by-line and column-by-column)"/><ROW Group="Graphical (plotting)" Function="filled.contour(x, y, z)" Description="Idem contour(x, y, z), but the areas between the contours are coloured, and a legend of the colours is drawn as well"/><ROW Group="Graphical (plotting)" Function="fourfoldplot(x)" Description="Visualizes, with quarters of circles, the association between two dichotomous variables for different populations (x must be an array with dim=c(2, 2, k), or a matrix with dim=c(2, 2) if k=1)"/><ROW Group="Graphical (plotting)" Function="hist(x)" Description="Histogram of the frequencies of x"/><ROW Group="Graphical (plotting)" Function="image(x, y, z)" Description="Idem contour(x, y, z), but with colours (actual data are plotted)"/><ROW Group="Graphical (plotting)" Function="interaction.plot(f1, f2, y)" Description="If f1 and f2 are factors, plots the means of y (on the y-axis) with respect to the values of f1 (on the x-axis) and of f2 (different curves); the option fun allows to choose the summary statistic of y (by default fun=mean)"/><ROW Group="Graphical (plotting)" Function="main=" Description="Parameters are common to many plotting functions, main title, must be a variable of mode character"/><ROW Group="Graphical (plotting)" Function="matplot(x, y)" Description="Bivariate plot of the first column of x vs. the first one of y, the second one of x vs. the second one of y, etc."/><ROW Group="Graphical (plotting)" Function="mosaicplot(x)" Description="Mosaic graph of the residuals from a log-linear regression of a contingency table"/><ROW Group="Graphical (plotting)" Function="pairs(x)" Description="If x is a matrix or a data frame, draws all possible bivariate plots between the columns of x"/><ROW Group="Graphical (plotting)" Function="persp(x, y, z)" Description="Idem contour(x, y, z), but in perspective (actual data are plotted)"/><ROW Group="Graphical (plotting)" Function="pie(x)" Description="Circular pie-chart"/><ROW Group="Graphical (plotting)" Function="plot(x)" Description="Plot of the values of x (on the y-axis) ordered on the x-axis"/><ROW Group="Graphical (plotting)" Function="plot(x, y)" Description="Bivariate plot of x (on the x-axis) and y (on the y-axis)"/><ROW Group="Graphical (plotting)" Function="plot.ts(x)" Description="If x is an object of class &apos;ts&apos;, plot of x with respect to time, x may be multivariate but the series must have the same frequency and dates"/><ROW Group="Graphical (plotting)" Function="qqnorm(x)" Description="Quantiles of x with respect to the values expected under a normal law"/><ROW Group="Graphical (plotting)" Function="qqplot(x, y)" Description="Quantiles of y with respect to the quantiles of x"/><ROW Group="Graphical (plotting)" Function="stars(x)" Description="If x is a matrix or a data frame, draws a graph with segments or a star where each row of x is represented by a star and the columns are the lengths of the segments"/><ROW Group="Graphical (plotting)" Function="stem(x)" Description="produces a stem-and-leaf plot of the values in &apos;x&apos;"/><ROW Group="Graphical (plotting)" Function="stripplot(x)" Description="Plot of the values of x on a line (an alternative to boxplot() for small sample sizes)"/><ROW Group="Graphical (plotting)" Function="sub=" Description="Parameters are common to many plotting functions, sub-title (written in a smaller font)"/><ROW Group="Graphical (plotting)" Function="sunflowerplot(x, y)" Description="Idem than plot() but the points with similar coorcoordinates are drawn as flowers which petal number represents the number of points"/><ROW Group="Graphical (plotting)" Function="symbols(x, y, ...)" Description="Draws, at the coordinates given by x and y, symbols (circles, squares, rectangles, stars, thermometres or &apos;boxplots&apos;) which sizes, colours . . . are specified by supplementary arguments"/><ROW Group="Graphical (plotting)" Function="termplot(mod.obj)" Description="Plot of the (partial) effects of a regression model (mod.obj)"/><ROW Group="Graphical (plotting)" Function="ts.plot(x)" Description="Idem plot.ts(x) but if x is multivariate the series may have different dates and must have the same frequency"/><ROW Group="Graphical (plotting)" Function="type=&apos;p&apos;" Description="Parameters are common to many plotting functions, specifies the type of plot, &apos;p&apos;: points, &apos;l&apos;: lines, &apos;b&apos;: points connected by lines, &apos;o&apos;: id. but the lines are over the points, &apos;h&apos;: vertical lines, &apos;s&apos;: steps, the data are represented by the top of the vertical lines, &apos;S&apos;: id. but the data are represented by the bottom of the vertical lines"/><ROW Group="Graphical (plotting)" Function="xlab=" Description="Parameters are common to many plotting functions, annotates the axes, must be variables of mode character"/><ROW Group="Graphical (plotting)" Function="xlim=" Description="Parameters are common to many plotting functions, specifies the lower and upper limits of the axes, for example with xlim=c(1, 10) or xlim=range(x)"/><ROW Group="Graphical (plotting)" Function="ylab=" Description="Parameters are common to many plotting functions, annotates the axes, must be variables of mode character"/><ROW Group="Graphical (plotting)" Function="ylim=" Description="Parameters are common to many plotting functions, specifies the lower and upper limits of the axes, for example with ylim=c(1, 10) or ylim=range(x)"/><ROW Group="Graphics (devices)" Function="bitmap" Description="See ?Devices"/><ROW Group="Graphics (devices)" Function="dev.off()" Description="Shuts down the specified (default is the current) graphics device; see also dev.cur, dev.set see also dev.cur, dev.set"/><ROW Group="Graphics (devices)" Function="jpeg" Description="See ?Devices"/><ROW Group="Graphics (devices)" Function="pdf" Description="See ?Devices"/><ROW Group="Graphics (devices)" Function="pictex" Description="See ?Devices"/><ROW Group="Graphics (devices)" Function="png" Description="See ?Devices"/><ROW Group="Graphics (devices)" Function="postscript(file)" Description="Starts the graphics device driver for producing PostScript graphics; use horizontal=FALSE, onefile=FALSE, paper=&apos;special&apos; for EPS files; &apos;family=&apos; specifies the font (AvantGarde, Bookman, Courier, Helvetica, Helvetica-Narrow, NewCenturySchoolbook, Palatino, Times, or ComputerModern); &apos;width=&apos; and &apos;height=&apos; specifies the size of the region in inches (for paper=&apos;special&apos;, these specify the paper size)"/><ROW Group="Graphics (devices)" Function="ps.options()" Description="Set and view (if called without arguments) default values for the arguments to postscript"/><ROW Group="Graphics (devices)" Function="windows()" Description="Open a graphics window"/><ROW Group="Graphics (devices)" Function="x11()" Description="Open a graphics window"/><ROW Group="Graphics (devices)" Function="xfig" Description="See ?Devices"/><ROW Group="Graphics (lattice)" Function="barchart(y~x)" Description="Histogram of the values of y with respect to those of x"/><ROW Group="Graphics (lattice)" Function="bwplot(y~x)" Description="Box-and-whiskers plot"/><ROW Group="Graphics (lattice)" Function="cloud(z~x*y|g1*g2)" Description="3d scatter plot"/><ROW Group="Graphics (lattice)" Function="densityplot(~x)" Description="Density functions plot"/><ROW Group="Graphics (lattice)" Function="dotplot(y~x)" Description="Cleveland dot plot (stacked plots line-by-line and columnby-column)"/><ROW Group="Graphics (lattice)" Function="histogram(~x)" Description="Histogram of the frequencies of x"/><ROW Group="Graphics (lattice)" Function="levelplot(z~x*y|g1*g2)" Description="Coloured plot of the values of z at the coordinates given by x and y (x, y and z are all of the same length)"/><ROW Group="Graphics (lattice)" Function="parallel(~x)" Description="Parallel coordinates plot"/><ROW Group="Graphics (lattice)" Function="qq(y~x)" Description="Quantiles to compare two distributions, x must be numeric, y may be numeric, character, or factor but must have two &apos;levels&apos;"/><ROW Group="Graphics (lattice)" Function="qqmath(~x)" Description="Quantiles of x with respect to the values expected under a theoretical distribution"/><ROW Group="Graphics (lattice)" Function="splom(~x)" Description="Matrix of bivariate plots"/><ROW Group="Graphics (lattice)" Function="stripplot(y~x)" Description="Single dimension plot, x must be numeric, y may be a factor"/><ROW Group="Graphics (lattice)" Function="wireframe(z~x*y|g1*g2)" Description="3d surface plot"/><ROW Group="Graphics (lattice)" Function="xyplot(y~x)" Description="Bivariate plots (with many functionalities)"/><ROW Group="Indexing (data frames)" Function="x$name" Description="Column named &apos;name&apos;"/><ROW Group="Indexing (data frames)" Function="x[[&apos;name&apos;]]" Description="Column named &apos;name&apos;"/><ROW Group="Indexing (lists)" Function="x$name" Description="Element of the list named &apos;name&apos;"/><ROW Group="Indexing (lists)" Function="x[[&apos;name&apos;]]" Description="Element of the list named &apos;name&apos;"/><ROW Group="Indexing (lists)" Function="x[[n]]" Description="Nth element of the list"/><ROW Group="Indexing (lists)" Function="x[n]" Description="List with elements n"/><ROW Group="Indexing (matrices)" Function="x[ , c(1, 3)]" Description="Columns 1 and 3"/><ROW Group="Indexing (matrices)" Function="x[ , j]" Description="Column j"/><ROW Group="Indexing (matrices)" Function="x[&apos;name&apos;, ]" Description="Row named &apos;name&apos;"/><ROW Group="Indexing (matrices)" Function="x[i, ]" Description="Row i"/><ROW Group="Indexing (matrices)" Function="x[i, j]" Description="Element at row i, column j"/><ROW Group="Indexing (vectors)" Function="x[&apos;name&apos;]" Description="Element named &apos;name&apos;"/><ROW Group="Indexing (vectors)" Function="x[-(1:n)]" Description="Elements from n+1 to the end"/><ROW Group="Indexing (vectors)" Function="x[1:n]" Description="First n elements"/><ROW Group="Indexing (vectors)" Function="x[c(1, 4, 2)]" Description="Specific elements"/><ROW Group="Indexing (vectors)" Function="x[-n]" Description="All but the nth element"/><ROW Group="Indexing (vectors)" Function="x[n]" Description="Nth element"/><ROW Group="Indexing (vectors)" Function="x[x %in% c(&apos;a&apos;, &apos;and&apos;, &apos;the&apos;)]" Description="Elements in the given set"/><ROW Group="Input and output" Function="cat(..., file=&apos; &apos;, sep=&apos; &apos;)" Description="Prints the arguments after coercing to character; sep is the character separator between arguments"/><ROW Group="Input and output" Function="data.entry()" Description="Spreadsheet"/><ROW Group="Input and output" Function="download.file(&apos;url1&apos;)" Description="From internet"/><ROW Group="Input and output" Function="format(x, ...)" Description="Format an R object for pretty printing"/><ROW Group="Input and output" Function="print(a, ...)" Description="Prints its arguments; generic, meaning it can have different methods for different objects"/><ROW Group="Input and output" Function="read.table.url(&apos;url1&apos;)" Description="Remote input"/><ROW Group="Input and output" Function="scan(x)" Description="Read a vector x"/><ROW Group="Input and output" Function="sink(file)" Description="Output to file, until sink()"/><ROW Group="Input and output" Function="source(&apos;file&apos;)" Description="Run the commands in file"/><ROW Group="Input and output" Function="source(file(&apos;clipboard&apos;))" Description="Run the commands in clipboard"/><ROW Group="Input and output" Function="url.show(&apos;url&apos;)" Description="Remote input"/><ROW Group="Math" Function="acos" Description=""/><ROW Group="Math" Function="Arg(x)" Description="Angle in radians of the complex number"/><ROW Group="Math" Function="asin" Description=""/><ROW Group="Math" Function="atan" Description=""/><ROW Group="Math" Function="atan2" Description=""/><ROW Group="Math" Function="Conj(x)" Description="Complex conjugate"/><ROW Group="Math" Function="convolve(x, y)" Description="Compute the several kinds of convolutions of two sequences"/><ROW Group="Math" Function="cos" Description=""/><ROW Group="Math" Function="cov(x, y)" Description="Covariance between x and y, or between the columns of x and those of y if they are matrices or data frames"/><ROW Group="Math" Function="cummax(x)" Description="A vector which ith element is the maximum from x[1] to x[i]"/><ROW Group="Math" Function="cummin(x)" Description="A vector which ith element is the minimum from x[1] to x[i]"/><ROW Group="Math" Function="cumprod(x)" Description="A vector which ith element is the product from x[1] to x[i]"/><ROW Group="Math" Function="cumsum(x)" Description="A vector which ith element is the sum from x[1] to x[i]"/><ROW Group="Math" Function="diff(x)" Description="Lagged and iterated differences of vector x"/><ROW Group="Math" Function="exp" Description=""/><ROW Group="Math" Function="fft(x)" Description="Fast Fourier Transform of an array"/><ROW Group="Math" Function="filter(x, filter)" Description="Applies linear filtering to a univariate time series or to each series separately of a multivariate time series"/><ROW Group="Math" Function="Im(x)" Description="Imaginary part"/><ROW Group="Math" Function="intersect(x, y)" Description="&apos;set&apos; function"/><ROW Group="Math" Function="is.element(el, set)" Description="&apos;set&apos; function"/><ROW Group="Math" Function="log" Description=""/><ROW Group="Math" Function="log(x, base)" Description="Computes the logarithm of x with base base"/><ROW Group="Math" Function="log10" Description=""/><ROW Group="Math" Function="max(x)" Description="Maximum of the elements of x"/><ROW Group="Math" Function="min(x)" Description="Minimum of the elements of x"/><ROW Group="Math" Function="Mod(x)" Description="Modulus; abs(x) is the same"/><ROW Group="Math" Function="mvfft(x)" Description="FFT of each column of a matrix"/><ROW Group="Math" Function="pmax(x, y, ...)" Description="A vector which ith element is the maximum of x[i], y[i], . . ."/><ROW Group="Math" Function="pmin(x, y, ...)" Description="A vector which ith element is the minimum of x[i], y[i], . . ."/><ROW Group="Math" Function="prod(x)" Description="Product of the elements of x"/><ROW Group="Math" Function="range(x)" Description="Idem then c(min(x), max(x))"/><ROW Group="Math" Function="rank(x)" Description="Ranks of the elements of x"/><ROW Group="Math" Function="Re(x)" Description="Real part of a complex number"/><ROW Group="Math" Function="round(x, n)" Description="Rounds the elements of x to n decimals"/><ROW Group="Math" Function="scale(x)" Description="If x is a matrix, centers and scales the data; to center only use the option scale=FALSE, to scale only center=FALSE (by default center=TRUE, scale=TRUE)"/><ROW Group="Math" Function="setdiff(x, y)" Description="&apos;set&apos; function"/><ROW Group="Math" Function="setequal(x, y)" Description="&apos;set&apos; function"/><ROW Group="Math" Function="sin" Description=""/><ROW Group="Math" Function="sum(x)" Description="Sum of the elements of x"/><ROW Group="Math" Function="tan" Description=""/><ROW Group="Math" Function="union(x, y)" Description="&apos;set&apos; function"/><ROW Group="Matrices" Function="%*%" Description="Matrix multiplication"/><ROW Group="Matrices" Function="colMeans(x)" Description="Fast version of col means"/><ROW Group="Matrices" Function="colsum(x)" Description="Sum of cols for a matrix-like object; colSums(x) is a faster version"/><ROW Group="Matrices" Function="diag(x)" Description="Diagonal"/><ROW Group="Matrices" Function="rowMeans(x)" Description="Fast version of row means"/><ROW Group="Matrices" Function="rowsum(x)" Description="Sum of rows for a matrix-like object; rowSums(x) is a faster version"/><ROW Group="Matrices" Function="solve(a)" Description="Matrix inverse of a"/><ROW Group="Matrices" Function="solve(a, b)" Description="Solves a %*% x=b for x"/><ROW Group="Matrices" Function="t(x)" Description="Transpose"/><ROW Group="Miscellaneous" Function="=" Description="Assign"/><ROW Group="Miscellaneous" Function="NA" Description="Missing data"/><ROW Group="Miscellaneous" Function="q()" Description="Quit R"/><ROW Group="Miscellaneous" Function="setwd(&apos;dir&apos;)" Description="Set R working folder on &apos;dir&apos;"/><ROW Group="Operators (arithmetic)" Function="-" Description="Subtraction"/><ROW Group="Operators (arithmetic)" Function="%%" Description="Modulo"/><ROW Group="Operators (arithmetic)" Function="%/%" Description="Integer divide"/><ROW Group="Operators (arithmetic)" Function="*" Description="Multiplication"/><ROW Group="Operators (arithmetic)" Function="/" Description="Division"/><ROW Group="Operators (arithmetic)" Function="^" Description="Exponentiation"/><ROW Group="Operators (arithmetic)" Function="+" Description="Addition"/><ROW Group="Operators (logical)" Function="!" Description="Logical negation"/><ROW Group="Operators (logical)" Function="!=" Description="Not equals"/><ROW Group="Operators (logical)" Function="&amp;" Description="Elementwise and"/><ROW Group="Operators (logical)" Function="&amp;&amp;" Description="Control and"/><ROW Group="Operators (logical)" Function="&gt;" Description="Greater than"/><ROW Group="Operators (logical)" Function="&gt;=" Description="Greater than or equal to"/><ROW Group="Operators (logical)" Function="&lt;" Description="Less than"/><ROW Group="Operators (logical)" Function="&lt;=" Description="Less than or equal to"/><ROW Group="Operators (logical)" Function="|" Description="Elementwise or"/><ROW Group="Operators (logical)" Function="||" Description="Control or"/><ROW Group="Operators (logical)" Function="==" Description="Equals"/><ROW Group="Operators (logical)" Function="xor" Description="Elementwise exclusive or"/><ROW Group="Optimization and model fitting" Function="AIC(fit)" Description="Computes the Akaike information criterion or AIC"/><ROW Group="Optimization and model fitting" Function="approx(x, y=)" Description="Linearly interpolate given data points; x can be an xy plotting structure"/><ROW Group="Optimization and model fitting" Function="coef(fit)" Description="Returns the estimated coefficients (sometimes with their standard-errors)"/><ROW Group="Optimization and model fitting" Function="deviance(fit)" Description="Returns the deviance"/><ROW Group="Optimization and model fitting" Function="df.residual(fit)" Description="Returns the number of residual degrees of freedom"/><ROW Group="Optimization and model fitting" Function="fitted(fit)" Description="Returns the fitted values"/><ROW Group="Optimization and model fitting" Function="glm(formula, family=)" Description="Fit generalized linear models, specified by giving a symbolic description of the linear predictor and a description of the error distribution; family is a description of the error distribution and link function to be used in the model; see ?family"/><ROW Group="Optimization and model fitting" Function="lm(formula)" Description="Fit linear models; formula is typically of the form response termA + termB + ...; use I(x*y) + I(x^2) for terms made of nonlinear components"/><ROW Group="Optimization and model fitting" Function="loess(formula)" Description="Fit a polynomial surface using local fitting"/><ROW Group="Optimization and model fitting" Function="logLik(fit)" Description="Computes the logarithm of the likelihood and the number of parameters"/><ROW Group="Optimization and model fitting" Function="nlm(f, p)" Description="Minimize function f using a Newton-type algorithm with starting values p"/><ROW Group="Optimization and model fitting" Function="nls(formula)" Description="Nonlinear least-squares estimates of the nonlinear model parameters"/><ROW Group="Optimization and model fitting" Function="optim(par, fn, method=c(&apos;Nelder&apos;, ...), ...)" Description="General-purpose optimization; par is initial values, fn is function to optimize (normally minimize)"/><ROW Group="Optimization and model fitting" Function="predict(fit, ...)" Description="Predictions from fit based on input data"/><ROW Group="Optimization and model fitting" Function="residuals(fit)" Description="Returns the residuals"/><ROW Group="Optimization and model fitting" Function="spline(x, y=)" Description="Cubic spline interpolation"/><ROW Group="Processing" Function="aggregate(x, by, FUN)" Description="Splits the data frame x into subsets, computes summary statistics for each, and returns the result in a convenient form; by is a list of grouping elements, each as long as the variables in x"/><ROW Group="Processing" Function="apply(x, INDEX, FUN=)" Description="A vector or array or list of values obtained by applying a function FUN to margins (INDEX) of x"/><ROW Group="Processing" Function="by(data, INDEX, FUN)" Description="Apply FUN to data frame data subsetted by INDEX"/><ROW Group="Processing" Function="lapply(x, FUN)" Description="Apply FUN to each element of the list x"/><ROW Group="Processing" Function="merge(a, b)" Description="Merge two data frames by common columns or row names"/><ROW Group="Processing" Function="reshape(x, ...)" Description="Reshapes a data frame between &apos;wide&apos; format with repeated measurements in separate columns of the same record and &apos;long&apos; format with the repeated measurements in separate records; use (direction=&apos;wide&apos;) or (direction=&apos;long&apos;)"/><ROW Group="Processing" Function="stack(x, ...)" Description="Transform data available as separate columns in a data frame or list into a single column"/><ROW Group="Processing" Function="tapply(x, INDEX, FUN=)" Description="Apply FUN to each cell of a ragged array given by x with indexes INDEX"/><ROW Group="Processing" Function="unstack(x, ...)" Description="Inverse of stack()"/><ROW Group="Processing" Function="xtabs(a, b, data=x)" Description="A contingency table from cross-classifying factors"/><ROW Group="Programming" Function="break" Description="Example:&#013;&#010;a = 0&#013;&#010;repeat {&#013;&#010;  a = a + 1&#013;&#010;&#013;&#010;  if (a &gt;= 3) print(a)&#013;&#010;  else cat(&apos;not&#092;n&apos;)&#013;&#010;&#013;&#010;  if (a == 10) break&#013;&#010;}"/><ROW Group="Programming" Function="do.call(funname, args)" Description="Executes a function call from the name of the function and a list of arguments to be passed to it"/><ROW Group="Programming" Function="for(var in seq) expr" Description="Use braces {} around statements.&#013;&#010;&#013;&#010;Example:&#013;&#010;&#013;&#010;a = 0&#013;&#010;for (i in 1:20) {&#013;&#010;  a = i&#013;&#010;  if(a &lt;= 5 ) {&#013;&#010;    cat(&apos;a = &apos;, a, &apos;(&lt;= 5)&apos;); cat(&apos;&#092;n&apos;)&#013;&#010;    next&#013;&#010;  }&#013;&#010;  if(a == 18) {&#013;&#010;    cat(&apos;a = &apos;, a, &apos;(= 18)&apos;); cat(&apos;&#092;n&apos;)&#013;&#010;    break&#013;&#010;  }&#013;&#010;}"/><ROW Group="Programming" Function="function(arglist) expr" Description="Function definition.&#013;&#010;&#013;&#010;Example 1:&#013;&#010;f = function(x) x/10 + 1&#013;&#010;&#013;&#010;# call&#013;&#010;f(x = 10)&#013;&#010;f(10)&#013;&#010;&#013;&#010;Example 2:&#013;&#010;f = function(x) {&#013;&#010;  x/10 + 1&#013;&#010;}&#013;&#010;&#013;&#010;# call&#013;&#010;f(x = 10)&#013;&#010;f(10)&#013;&#010;&#013;&#010;Example 3:&#013;&#010;f = function(x, y = 3) {&#013;&#010;  x/10 + 1 - y&#013;&#010;}&#013;&#010;&#013;&#010;# call&#013;&#010;f(10)&#013;&#010;"/><ROW Group="Programming" Function="if(cond) cons.expr else alt.expr" Description="Use braces {} around statements.&#013;&#010;&#013;&#010;Example:&#013;&#010;x = 1:9&#013;&#010;for (i in 1:9) {&#013;&#010;  if(x[i] &lt;= 5 ) {&#013;&#010;    cat(&apos;x = &apos;, x[i], &apos;(&lt;= 5)&apos;); cat(&apos;&#092;n&apos;)&#013;&#010;  }&#013;&#010;  else {&#013;&#010;    cat(&apos;x = &apos;, x[i], &apos;(&gt; 5)&apos;); cat(&apos;&#092;n&apos;)&#013;&#010;  }&#013;&#010;}&#013;&#010;"/><ROW Group="Programming" Function="if(cond) expr" Description="Use braces {} around statements.&#013;&#010;&#013;&#010;Example 1:&#013;&#010;x=1&#013;&#010;if(x != 0) print(x)&#013;&#010;&#013;&#010;Example 2:&#013;&#010;x=1&#013;&#010;if(x != 0) {&#013;&#010;  x&#013;&#010;  print(x)&#013;&#010;}"/><ROW Group="Programming" Function="ifelse(test, yes, no)" Description="A value with the same shape as test filled with elements from either yes or no.&#013;&#010;&#013;&#010;Example 1:&#013;&#010;set.seed(15)&#013;&#010;x = rnorm(10)&#013;&#010;x&#013;&#010;y = ifelse(x &gt; 0, 1, -1)&#013;&#010;y&#013;&#010;&#013;&#010;Example 2:&#013;&#010;z = ifelse(x &gt; 0, 1, ifelse(x &lt; 0, &apos;&lt; zero&apos;, 0))&#013;&#010;z"/><ROW Group="Programming" Function="next" Description="Basic control-flow constructs of the R language.&#013;&#010;&#013;&#010;Example:&#013;&#010;a = 0&#013;&#010;for (i in 1:20) {&#013;&#010;  a = i&#013;&#010;  if(a &lt;= 5 ) {&#013;&#010;    cat(&apos;a = &apos;, a, &apos;(&lt;= 5)&apos;); cat(&apos;&#092;n&apos;)&#013;&#010;    next&#013;&#010;  }&#013;&#010;  if(a == 18) {&#013;&#010;    cat(&apos;a = &apos;, a, &apos;(= 18)&apos;); cat(&apos;&#092;n&apos;)&#013;&#010;    break&#013;&#010;  }&#013;&#010;}&#013;&#010;"/><ROW Group="Programming" Function="repeat expr" Description="Use braces {} around state.&#013;&#010;&#013;&#010;Example:&#013;&#010;a = 0&#013;&#010;repeat {&#013;&#010;  a = a + 1&#013;&#010;&#013;&#010;  if (a &gt;= 3) print(a)&#013;&#010;  else cat(&apos;not&#092;n&apos;)&#013;&#010;&#013;&#010;  if (a == 10) break&#013;&#010;}&#013;&#010;"/><ROW Group="Programming" Function="return(value)" Description="Optional return of functions.&#013;&#010;&#013;&#010;Example:&#013;&#010;if(x != 0) print(x)&#013;&#010;&#013;&#010;myf = function(a=1, b=2) {&#013;&#010; c = a + b&#013;&#010; return(c)&#013;&#010;}&#013;&#010;&#013;&#010;myf()&#013;&#010;myf(3, 4)&#013;&#010;"/><ROW Group="Programming" Function="swith" Description="switch evaluates a expression and accordingly chooses one of the further arguments &#013;&#010;&#013;&#010;Example:&#013;&#010;set.seed(59)&#013;&#010;x = letters[floor(1 + runif(1, 0, 4))]&#013;&#010;x&#013;&#010;y = switch(x,&#013;&#010;  a=&apos;Bonjour&apos;,&#013;&#010;  b=&apos;Gutten Tag&apos;,&#013;&#010;  c=&apos;Hello&apos;,&#013;&#010;  d=&apos;Konnichi wa&apos;)&#013;&#010;y&#013;&#010;"/><ROW Group="Programming" Function="while(cond) expr" Description="Use braces {} around statements.&#013;&#010;&#013;&#010;Example:&#013;&#010;a = 0&#013;&#010;while (a &lt; 11) {&#013;&#010;  if (a &gt;= 3) print(a)&#013;&#010;  else cat(&apos;not&#092;n&apos;)&#013;&#010;  a = a + 1&#013;&#010;}&#013;&#010;"/><ROW Group="Statistics (mva)" Function="cancor()" Description="Canonical correlation"/><ROW Group="Statistics (mva)" Function="factanal()" Description="Factor analysis"/><ROW Group="Statistics (mva)" Function="kmeans()" Description="kmeans cluster analysis"/><ROW Group="Statistics (mva)" Function="prcomp()" Description="Principal components"/><ROW Group="Statistics" Function="anova(fit, ...)" Description="Analysis of variance (or deviance) tables for one or more fitted model objects"/><ROW Group="Statistics" Function="aov(formula)" Description="Analysis of variance model"/><ROW Group="Statistics" Function="binom.test()" Description="Use help.search(&apos;test&apos;)"/><ROW Group="Statistics" Function="chisq.test(x)" Description="Chi-square test on matrix x"/><ROW Group="Statistics" Function="cor(x)" Description="Correlation matrix of x if it is a matrix or a data frame (1 if x is a vector)"/><ROW Group="Statistics" Function="cor(x, y)" Description="Linear correlation between x and y, or correlation matrix if they are matrices or data frames"/><ROW Group="Statistics" Function="cor.test(a, b)" Description="Test correlation"/><ROW Group="Statistics" Function="cov(x)" Description="Covariance of the elements of x (calculated on n-1); if x is a matrix or a data frame, the variance-covariance matrix is calculated"/><ROW Group="Statistics" Function="density(x)" Description="Kernel density estimates of x"/><ROW Group="Statistics" Function="fisher.test()" Description="Fisher exact test"/><ROW Group="Statistics" Function="friedman.test()" Description="Friedman test"/><ROW Group="Statistics" Function="mean(x)" Description="Mean of the elements of x"/><ROW Group="Statistics" Function="median(x)" Description="Median of the elements of x"/><ROW Group="Statistics" Function="pairwise.t.test()" Description="Use help.search(&apos;test&apos;)"/><ROW Group="Statistics" Function="power.t.test()" Description="Use help.search(&apos;test&apos;)"/><ROW Group="Statistics" Function="prop.test()" Description="Significance test"/><ROW Group="Statistics" Function="quantile(x, probs=)" Description="Sample quantiles corresponding to the given probabilities (defaults to 0, 0.25, 0.5, 0.75, 1)"/><ROW Group="Statistics" Function="sd(x)" Description="Standard deviation of x"/><ROW Group="Statistics" Function="t.test()" Description="Use help.search(&apos;test&apos;)"/><ROW Group="Statistics" Function="var(x)" Description="Variance of the elements of x (calculated on n-1); if x is a matrix or a data frame, the variance-covariance matrix is calculated"/><ROW Group="Statistics" Function="var(x, y)" Description="Covariance between x and y, or between the columns of x and those of y if they are matrices or data frames"/><ROW Group="Statistics" Function="weighted.mean(x, w)" Description="Mean of x with weights w"/><ROW Group="Strings" Function="grep(pattern, x)" Description="Searches for matches to pattern within x; see ?regex"/><ROW Group="Strings" Function="gsub(pattern, replacement, x)" Description="Replacement of matches determined by regular expression matching sub() is the same but only replaces the first occurrence"/><ROW Group="Strings" Function="match(x, table)" Description="A vector of the positions of first matches for the elements of x among table"/><ROW Group="Strings" Function="nchar(x)" Description="Number of characters"/><ROW Group="Strings" Function="paste(...)" Description="Concatenate vectors after converting to character; &apos;sep=&apos; is the string to separate terms (a single space is the default); &apos;collapse=&apos; is an optional string to separate &apos;collapsed&apos; results"/><ROW Group="Strings" Function="pmatch(x, table)" Description="Partial matches for the elements of x among table"/><ROW Group="Strings" Function="strsplit(x, split)" Description="Split x according to the substring split"/><ROW Group="Strings" Function="substr(x, start, stop)" Description="Substrings in a character vector; can also assign, as substr(x, start, stop)=value"/><ROW Group="Strings" Function="tolower(x)" Description="Convert to lowercase"/><ROW Group="Strings" Function="toupper(x)" Description="Convert to uppercase"/><ROW Group="Strings" Function="x %in% table" Description="Idem match(x,table), but returns a logical vector"/><ROW Group="Variable (conversion)" Function="as.array(x)" Description="Convert type; for a complete list, use methods(as)"/><ROW Group="Variable (conversion)" Function="as.character(x)" Description="Convert type; for a complete list, use methods(as)"/><ROW Group="Variable (conversion)" Function="as.complex(x)" Description="Convert type; for a complete list, use methods(as)"/><ROW Group="Variable (conversion)" Function="as.data.frame(x)" Description="Convert type; for a complete list, use methods(as)"/><ROW Group="Variable (conversion)" Function="as.logical(x)" Description="Convert type; for a complete list, use methods(as)"/><ROW Group="Variable (conversion)" Function="as.numeric(x)" Description="Convert type; for a complete list, use methods(as)"/><ROW Group="Variable (information)" Function="attr(x,which)" Description="Get or set the attribute which of x"/><ROW Group="Variable (information)" Function="attributes(obj)" Description="Get or set the list of attributes of obj"/><ROW Group="Variable (information)" Function="class(x)" Description="Get or set the class of x; class(x)=&apos;myclass&apos;"/><ROW Group="Variable (information)" Function="dim(x)" Description="Retrieve or set the dimension of an object; dim(x)=c(3,2)"/><ROW Group="Variable (information)" Function="dimnames(x)" Description="Retrieve or set the dimension names of an object"/><ROW Group="Variable (information)" Function="is.array(x)" Description="Test for type; for a complete list, use methods(is)"/><ROW Group="Variable (information)" Function="is.character(x)" Description="Test for type; for a complete list, use methods(is)"/><ROW Group="Variable (information)" Function="is.complex(x)" Description="Test for type; for a complete list, use methods(is)"/><ROW Group="Variable (information)" Function="is.data.frame(x)" Description="Test for type; for a complete list, use methods(is)"/><ROW Group="Variable (information)" Function="is.na(x)" Description="Test for type; for a complete list, use methods(is)"/><ROW Group="Variable (information)" Function="is.null(x)" Description="Test for type; for a complete list, use methods(is)"/><ROW Group="Variable (information)" Function="is.numeric(x)" Description="Test for type; for a complete list, use methods(is)"/><ROW Group="Variable (information)" Function="length(x)" Description="Number of elements in x"/><ROW Group="Variable (information)" Function="ncol(x)" Description="Number of columns; NCOL(x) is the same but treats a vector as a onerow matrix"/><ROW Group="Variable (information)" Function="nrow(x)" Description="Number of rows; NROW(x) is the same but treats a vector as a onerow matrix"/><ROW Group="Variable (information)" Function="str(object)" Description="Print useful information about object"/><ROW Group="Variable (managing)" Function="ls()" Description="Show objects in the search path; specify pat=&apos;pat&apos; to search on a pattern"/><ROW Group="Variable (managing)" Function="rm(object)" Description="Remove object"/><ROW Group="Variable (managing)" Function="unclass(x)" Description="Remove the class attribute of x"/></ROWDATA></DATAPACKET>